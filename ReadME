# Установка и запуск

## 1. Настройка окружения

Создайте файл `.env` в корне проекта, если он ещё не создан. Пример содержимого `.env`:

```env
ENV=local
DATABASE_URL=postgres://postgres:your_password@localhost:5432/online_song_lib_db?sslmode=disable
HTTP_SERVER_ADDRESS=localhost:8080
EXTERNAL_API_URL=http://localhost:9090/info
```

> **Важно**: Замените `your_password` на пароль пользователя `postgres`. Название базы данных (`online_song_lib_db`) оставьте без изменений, как в примере.

---

## 2. Команды для запуска

Проект поддерживает несколько команд через `Makefile`:

### 2.1 Запуск основного сервера

```bash
make server-run
```

Запускает основной сервер с использованием конфигурации из `.env`.

### 2.2 Запуск мок-сервера для тестирования внешнего API

```bash
make mock-server-run
```

Запускает тестовый сервер, имитирующий внешний API, доступный по адресу `http://localhost:9090`.

### 2.3 Создание базы данных

```bash
make create-db
```

Создаёт базу данных `online_song_lib_db`. Необходима для первичной настройки перед применением миграций.

### 2.4 Применение миграций

```bash
make migrate
```

Применяет миграции, создавая структуру таблиц и другие объекты в базе данных.

---

## 3. Доступ к API

После запуска основного сервера (`make server-run`) API будет доступно по адресу `http://localhost:8080`. Для тестирования рекомендуется использовать **Postman** или **Swagger UI**.

### Основные команды API:

- **GET /library** – получение списка песен с фильтрацией и пагинацией.
- **POST /library** – добавление новой песни.
- **GET /library/{id}/text** – получение текста песни по ID.
- **DELETE /library/{id}** – удаление песни по ID.
- **PUT /library/{id}** – обновление данных песни.
